/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Connectivity.ConnectionClass;
import java.awt.BorderLayout;
import java.io.BufferedReader;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

/**
 *
 * @author LovisaKampe
 */
public class ShowUserInformationGUI extends javax.swing.JFrame {
    Statement st;
    ResultSet queryResult = null;
    private static String userID;
    private static String userLatestLoginLocation;

    /**
     * Creates new form ShowUserInformationGUI
     */
    public ShowUserInformationGUI(String userID) {
        initComponents();
        this.userID = userID;
        PopulateInformationFields();
        UserPositionOnMap();
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblIngetSokresultat = new javax.swing.JLabel();
        lblTelefon = new javax.swing.JLabel();
        lblNamn = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblSenastInloggad = new javax.swing.JLabel();
        lblPosition = new javax.swing.JLabel();
        pnlMap = new javax.swing.JPanel();
        lblUserNamn = new javax.swing.JLabel();
        lblUserTelefon = new javax.swing.JLabel();
        lblUserSenastInloggad = new javax.swing.JLabel();
        lblUserPosition = new javax.swing.JLabel();
        lblUserEmail = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(200, 212, 222));

        lblIngetSokresultat.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        lblIngetSokresultat.setForeground(new java.awt.Color(77, 85, 92));
        lblIngetSokresultat.setText("Information om användare");

        lblTelefon.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        lblTelefon.setForeground(new java.awt.Color(77, 85, 92));
        lblTelefon.setText("Telefon:");

        lblNamn.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        lblNamn.setForeground(new java.awt.Color(77, 85, 92));
        lblNamn.setText("Namn: ");

        lblEmail.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        lblEmail.setForeground(new java.awt.Color(77, 85, 92));
        lblEmail.setText("Email:");

        lblSenastInloggad.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        lblSenastInloggad.setForeground(new java.awt.Color(77, 85, 92));
        lblSenastInloggad.setText("Senast inloggad:");

        lblPosition.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        lblPosition.setForeground(new java.awt.Color(77, 85, 92));
        lblPosition.setText("Position:");

        pnlMap.setPreferredSize(new java.awt.Dimension(550, 450));

        javax.swing.GroupLayout pnlMapLayout = new javax.swing.GroupLayout(pnlMap);
        pnlMap.setLayout(pnlMapLayout);
        pnlMapLayout.setHorizontalGroup(
            pnlMapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 550, Short.MAX_VALUE)
        );
        pnlMapLayout.setVerticalGroup(
            pnlMapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 450, Short.MAX_VALUE)
        );

        lblUserNamn.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        lblUserNamn.setForeground(new java.awt.Color(77, 85, 92));
        lblUserNamn.setText("Namn");

        lblUserTelefon.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        lblUserTelefon.setForeground(new java.awt.Color(77, 85, 92));
        lblUserTelefon.setText("Telefon");

        lblUserSenastInloggad.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        lblUserSenastInloggad.setForeground(new java.awt.Color(77, 85, 92));
        lblUserSenastInloggad.setText("Senast inlggad");

        lblUserPosition.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        lblUserPosition.setForeground(new java.awt.Color(77, 85, 92));
        lblUserPosition.setText("Position");

        lblUserEmail.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        lblUserEmail.setForeground(new java.awt.Color(77, 85, 92));
        lblUserEmail.setText("Email");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(pnlMap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addComponent(lblIngetSokresultat))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTelefon)
                            .addComponent(lblEmail)
                            .addComponent(lblSenastInloggad)
                            .addComponent(lblPosition))
                        .addGap(45, 45, 45)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblUserTelefon)
                            .addComponent(lblUserNamn)
                            .addComponent(lblUserSenastInloggad)
                            .addComponent(lblUserPosition)
                            .addComponent(lblUserEmail))))
                .addContainerGap(115, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(42, 42, 42)
                    .addComponent(lblNamn)
                    .addContainerGap(663, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblIngetSokresultat, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(lblUserNamn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUserTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUserEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSenastInloggad, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUserSenastInloggad, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPosition, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUserPosition, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(90, 90, 90)
                .addComponent(pnlMap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(78, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(102, 102, 102)
                    .addComponent(lblNamn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(761, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShowUserInformationGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShowUserInformationGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShowUserInformationGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShowUserInformationGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ShowUserInformationGUI(userID).setVisible(true);
            }
        });
    }
    
    public void PopulateInformationFields() {
        try {
            st = ConnectionClass.conn.createStatement();
        }
        catch(Exception e) {
            System.out.println("Failed to create statement.");
            System.out.println(e.toString());
            return;
        }
        
        String UserInformatioQuery = "SELECT Namn, Telefon, Email, Kordninater, Datum FROM `Användare` WHERE Användare_ID=" + userID + ";";
        
        String userNamn = "";
        String userTelefon = "";
        String userEmail = "";
        String userLatestLoginDate = "";
        String userLatestLoginCity = "";
        
        try {
            queryResult = st.executeQuery(UserInformatioQuery);
            queryResult.next();
            
            userNamn = queryResult.getString("Namn");
            userTelefon = queryResult.getString("Telefon");
            userEmail = queryResult.getString("Email");
            userLatestLoginDate = queryResult.getString("Datum");
            userLatestLoginLocation = queryResult.getString("Kordninater"); //Stavning enligt tabell i databas.
            
        } catch (SQLException e) {
            System.out.println("Database access error.");
            System.out.println(e.toString());
            return;
        }
        
        //Bryter isär användarens koordinater från databasen till två strängar, latitud och longitud.
        String [] usercoordinates = userLatestLoginLocation.split(",");
        String latitude = usercoordinates[0];
        String longitude = usercoordinates[1];
        
        //Använder latitude och longitud för att hämta staden som användare loggade in i senast.
        String cityJSON = "";
        BufferedReader inLocation = null;
        try {
            URL userLoginCity = new URL("http://www.geoplugin.net/extras/location.gp?lat=" + latitude + "&lon=" + longitude + "&format=json");
            inLocation = new BufferedReader(new InputStreamReader(
                    userLoginCity.openStream()));

            cityJSON = inLocation.readLine();
        }catch (MalformedURLException e) {
            System.out.println(e);
        }catch (IOException e) {
            System.out.println(e);
        } finally {
            if (inLocation != null) {
                try {
                    inLocation.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
        //Parsear JSONobjekt för att ta fram userLatestLoginCity - staden för koordinaterna.
        JSONParser parser = new JSONParser();
        try {
            Object obj = parser.parse(cityJSON);
            JSONObject locationObject = (JSONObject) obj;
            userLatestLoginCity = locationObject.get("geoplugin_place").toString();
        } catch (ParseException e) {
            System.out.println(e);
        }
        
        //Sätter texten i GUI för att visa användarens information.
        lblUserNamn.setText(userNamn);
        lblUserTelefon.setText(userTelefon);
        lblUserEmail.setText(userEmail);
        lblUserSenastInloggad.setText(userLatestLoginDate);
        lblUserPosition.setText(userLatestLoginCity);
    }
    
    //Metod för att hämta karta med användarens position och fylla en JPanel med denna. Visar vilken stad användaren loggade in i senast.
    public void UserPositionOnMap() {
        String destinationFile = "image_" + userID + ".jpg";
        try {
            String imageUrl = "http://open.mapquestapi.com/staticmap/v4/getmap?key=7KbAOgw7xHYVG78wtPuQxqXuTWblA5I6&size=600,600&zoom=15&center=" + userLatestLoginLocation + "&pois=red_1," + userLatestLoginLocation + ",0,0&type=map";
            
            //String str = destinationFile;
            URL url = new URL(imageUrl);
            InputStream is = url.openStream();
            OutputStream os = new FileOutputStream(destinationFile, false);

            byte[] b = new byte[2048];
            int length;

            while ((length = is.read(b)) != -1) {
                os.write(b, 0, length);
            }
            is.close();
            os.close();
        } catch (IOException e) {
            e.printStackTrace();
            System.exit(1);
        }
        
        //Fyller pnlMap med bilden som innehåller karta med markerad position.
        ImageIcon imageMap = new ImageIcon(destinationFile);
        JLabel imageLabel = new JLabel("", imageMap, JLabel.CENTER);
        
        
        pnlMap.setLayout(new BorderLayout());
        pnlMap.add(imageLabel, BorderLayout.CENTER);
        pnlMap.revalidate();
        pnlMap.repaint();

        //Tar bort filen om den finns.
        File imageFile = new File(destinationFile);
        if(imageFile.exists()) {
            imageFile.delete(); 
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblIngetSokresultat;
    private javax.swing.JLabel lblNamn;
    private javax.swing.JLabel lblPosition;
    private javax.swing.JLabel lblSenastInloggad;
    private javax.swing.JLabel lblTelefon;
    private javax.swing.JLabel lblUserEmail;
    private javax.swing.JLabel lblUserNamn;
    private javax.swing.JLabel lblUserPosition;
    private javax.swing.JLabel lblUserSenastInloggad;
    private javax.swing.JLabel lblUserTelefon;
    private javax.swing.JPanel pnlMap;
    // End of variables declaration//GEN-END:variables
}
